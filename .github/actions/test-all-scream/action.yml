name: EAMxx standalone testing
description: runs EAMxx standalone testing with required configuration

inputs:
  build_type:
    description: 'Build type to run'
    required: true
  machine:
    description: 'Machine name for test-all-scream'
    required: true
  run_type:
    description: 'Type of test-all-scream run'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check if OS is Linux
      run: |
        # Ensure the operating system is Linux
        if [ "$(uname)" != "Linux" ]; then
          echo "This action only supports Linux."
          exit 1
        fi
      shell: bash
    - name: Validate inputs
      run: |
        VALID_RUN_TYPES="nightly at-run bless"
        if ! [[ " $VALID_RUN_TYPES " =~ " ${{ inputs.run_type }} " ]]; then
          echo "Invalid run_type: ${{ inputs.run_type }}"
          echo "Valid choices: $VALID_RUN_TYPES"
          exit 1
        fi
      shell: bash
    - name: Check repo presence
      run: |
        if [ ! -d ".git" ]; then
          echo "Repository is not checked out. Please ensure the repository is checked out before running this action."
          exit 1
        fi
      shell: bash
    - name: Print build specs
      run: |
        echo "Testing EAMxx standalone, for the following configuration:"
        echo "  testing type: ${{ inputs.run_type }}"
        echo "  build type  : ${{ inputs.build_type }}"
        echo "  machine     : ${{ inputs.machine }}"
      shell: bash
    - name: Run test-all-scream
      run: |
        cd components/eamxx
        if [ "${{ inputs.run_type }}" = "nightly" ]; then
          ./scripts/test-all-scream -m ${{ inputs.machine }} -t ${{inputs.build_type}} --baseline-dir AUTO -c EKAT_DISABLE_TPL_WARNINGS=ON -s
        elif [ "${{ inputs.run_type }}" = "generate" ]; then 
          ./scripts/test-all-scream -m ${{ inputs.machine }} -t ${{inputs.build_type}} --baseline-dir AUTO -c EKAT_DISABLE_TPL_WARNINGS=ON -g
        else
          ./scripts/test-all-scream -m ${{ inputs.machine }} -t ${{inputs.build_type}} --baseline-dir AUTO -c EKAT_DISABLE_TPL_WARNINGS=ON
        fi
      shell: bash
    - name: Update CA certificates
      if: always()
      run: |
        # NOTE: we may need this step if we are running on a machine that uses special
        #       CA certificates, as by default Node.js uses its own set of trusted root certificates,
        #       which may not include all the system certificates
        
        # Check if we need to run with sudo. We need a) UID>0 and b) sudo cmd exists
        if [ "$UID" -eq 0 ]; then
          SUDO_CMD=""
        else
          if command -v sudo &> /dev/null; then
            SUDO_CMD="sudo"
          else
            SUDO_CMD=""
          fi
        fi

        # Depending on distro, the cmd to update ca certificates is different
        # These two cover the vast majority of linux distros
        if hash update-ca-certificates 2>/dev/null; then
          $SUDO_CMD update-ca-certificates
        elif hash update-ca-trust 2>/dev/null; then
          $SUDO_CMD update-ca-trust
        else
          echo "No known CA certificates update command found."
          exit 1
        fi
      shell: bash
    - name: Upload ctest logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: log-files-${{ inputs.build_type }}
        path: components/eamxx/ctest-build/*/Testing/Temporary/Last*.log
